<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ping.homeschool.dao.MessageDao">


    <insert id="addMessage">
        insert into message
        (sender, recipient, class_id, message_title, message_content, send_time)
        VALUES (#{sender}, #{recipient}, #{classId}, #{messageTitle}, #{messageContent}, #{sendTime})
    </insert>

    <update id="deleteMessage">
        update message
        set delete_status = 0
        where message_id = #{messageId}
    </update>

    <update id="updateMessage">
        update message
        set is_read = 2
        where message_id = #{messageId}
    </update>

    <select id="selectById" resultType="com.ping.homeschool.model.Message">
        select message_id messageId, sender, recipient, m.class_id classId, class_name className, message_title messageTitle, message_content messageContent, send_time sendTime, is_read isRead
        from message m, my_class c
        where message_id = #{messageId} and m.class_id = c.class_id
    </select>

    <select id="listSenderMessage" resultType="com.alibaba.fastjson.JSONObject">
        select message_id messageId, sender, recipient, c.class_name className, message_title messageTitle, message_content messageContent, send_time sendTime, is_read isRead
        from message m , my_class c
        where delete_status != 0 and sender = #{sender} and m.class_id = c.class_id
        order by message_id desc
    </select>

    <select id="listRecipientMessage" resultType="com.alibaba.fastjson.JSONObject">
        select message_id messageId, sender, recipient, c.class_name className, message_title messageTitle, message_content messageContent, send_time sendTime, is_read isRead
        from message m , my_class c
        where delete_status != 0 and recipient = #{recipient} and m.class_id = c.class_id
        order by message_id desc
    </select>

    <select id="queryByMany" resultType="com.alibaba.fastjson.JSONObject">
        select message_id messageId, sender, recipient, c.class_name className, message_title messageTitle, message_content messageContent, send_time sendTime, is_read isRead
        from message m , my_class c
        <where> delete_status != 0 and c.class_id = m.class_id
            <if test="username != ''">
                and  recipient = #{username}
            </if>
            <if test="classId != ''">
                  and m.class_id = #{classId}
            </if>
            <if test="messageTitle != ''">
                and message_title like concat('%', #{messageTitle}, '%')
            </if>
            <if test="messageContent != ''">
                and message_content like concat('%', #{messageContent}, '%')
            </if>
            <if test="start != null">
                and send_time between #{start} and #{end}
            </if>
            <if test="isRead == 1 or isRead == 2 or isRead != ''">
                and is_read = #{isRead}
            </if>
            <if test="sender != ''">
                and sender = #{sender}
            </if>
        </where>

    </select>
</mapper>